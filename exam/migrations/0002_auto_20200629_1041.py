# Generated by Django 2.2 on 2020-06-29 05:11

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('post', '0001_initial'),
        ('nxtgenUser', '0001_initial'),
        ('commentExplanation', '0001_initial'),
        ('questionBank', '0001_initial'),
        ('exam', '0001_initial'),
        ('Class', '0003_auto_20200629_1041'),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.AddField(
            model_name='testquestion',
            name='explanation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='questionBank.QuestionExplanation'),
        ),
        migrations.AddField(
            model_name='testquestion',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionBank.Question'),
        ),
        migrations.AddField(
            model_name='testquestion',
            name='section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='exam.TestSection'),
        ),
        migrations.AddField(
            model_name='testquestion',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam.Test'),
        ),
        migrations.AddField(
            model_name='testcomment',
            name='comment',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='commentExplanation.Comment'),
        ),
        migrations.AddField(
            model_name='testcomment',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam.Test'),
        ),
        migrations.AddField(
            model_name='test',
            name='additional_subject_teacher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Class.AdditionalSubjectTeacherRelation'),
        ),
        migrations.AddField(
            model_name='test',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='nxtgenUser.NxtgenUser'),
        ),
        migrations.AddField(
            model_name='test',
            name='exam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam.Exam'),
        ),
        migrations.AddField(
            model_name='test',
            name='subject_teacher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Class.ClassSubjectTeacherRelation'),
        ),
        migrations.AddField(
            model_name='test',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='examqueryexplanationcomment',
            name='comment',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='commentExplanation.Comment'),
        ),
        migrations.AddField(
            model_name='examqueryexplanationcomment',
            name='exam_query_explanation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam.ExamQueryExplanation'),
        ),
        migrations.AddField(
            model_name='examqueryexplanation',
            name='exam_query',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam.ExamQuery'),
        ),
        migrations.AddField(
            model_name='examqueryexplanation',
            name='explanation',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='commentExplanation.Explanation'),
        ),
        migrations.AddField(
            model_name='examquerycomment',
            name='comment',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='commentExplanation.Comment'),
        ),
        migrations.AddField(
            model_name='examquerycomment',
            name='exam_query',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam.ExamQuery'),
        ),
        migrations.AddField(
            model_name='examquery',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtgenUser.NxtgenUser'),
        ),
        migrations.AddField(
            model_name='examquery',
            name='exam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam.Exam'),
        ),
        migrations.AddField(
            model_name='examquery',
            name='query',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='post.Post'),
        ),
        migrations.AddField(
            model_name='examquery',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='exampostcomment',
            name='comment',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='commentExplanation.Comment'),
        ),
        migrations.AddField(
            model_name='exampostcomment',
            name='exam_post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam.ExamPost'),
        ),
        migrations.AddField(
            model_name='exampost',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtgenUser.NxtgenUser'),
        ),
        migrations.AddField(
            model_name='exampost',
            name='exam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam.Exam'),
        ),
        migrations.AddField(
            model_name='exampost',
            name='post',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='post.Post'),
        ),
        migrations.AddField(
            model_name='exampost',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='examfollowerrelation',
            name='exam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam.Exam'),
        ),
        migrations.AddField(
            model_name='examfollowerrelation',
            name='follower',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtgenUser.NxtgenUser'),
        ),
        migrations.AddField(
            model_name='examapprovededit',
            name='exam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam.Exam'),
        ),
        migrations.AddField(
            model_name='examapprovededit',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtgenUser.NxtgenUser'),
        ),
        migrations.AlterUniqueTogether(
            name='teststudentattempt',
            unique_together={('test_student', 'date')},
        ),
        migrations.AlterUniqueTogether(
            name='teststudent',
            unique_together={('test', 'student')},
        ),
        migrations.AlterUniqueTogether(
            name='testquestionstudentexplanation',
            unique_together={('attempted_student', 'question')},
        ),
        migrations.AlterUniqueTogether(
            name='testquestionstudentchoice',
            unique_together={('question_choice', 'attempted_student')},
        ),
        migrations.AlterUniqueTogether(
            name='testquestionchoice',
            unique_together={('test_question', 'choice')},
        ),
        migrations.AlterUniqueTogether(
            name='testquestion',
            unique_together={('test', 'question', 'position')},
        ),
        migrations.AlterUniqueTogether(
            name='examquery',
            unique_together={('exam', 'query')},
        ),
        migrations.AlterUniqueTogether(
            name='exampost',
            unique_together={('exam', 'post')},
        ),
        migrations.AlterUniqueTogether(
            name='examfollowerrelation',
            unique_together={('exam', 'follower')},
        ),
        migrations.AlterUniqueTogether(
            name='examapprovededit',
            unique_together={('exam', 'user')},
        ),
    ]
