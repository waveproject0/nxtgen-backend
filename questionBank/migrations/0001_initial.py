# Generated by Django 2.2 on 2020-06-29 05:11

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('nxtgenUser', '0001_initial'),
        ('commentExplanation', '0001_initial'),
        ('exam', '0001_initial'),
        ('Class', '0003_auto_20200629_1041'),
        ('course', '0001_initial'),
        ('concept', '0001_initial'),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_type', models.CharField(blank=True, choices=[('subject', 'Subject'), ('additional subject', 'Additional subject')], max_length=20, null=True)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('body', django.contrib.postgres.fields.jsonb.JSONField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active')], default='draft', max_length=20)),
                ('question_type', models.CharField(choices=[('accedemic', 'accedemic'), ('competative', 'competative'), ('research', 'research'), ('high order thinking', 'High order thinking')], max_length=20)),
                ('question_in', models.CharField(choices=[('subject', 'Subject'), ('topic', 'Topic'), ('subTopic', 'SubTopic')], max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('publish', models.DateTimeField(blank=True, null=True)),
                ('additional_subject_teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Class.AdditionalSubjectTeacherRelation')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='nxtgenUser.NxtgenUser')),
                ('subject_teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Class.ClassSubjectTeacherRelation')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionTopicRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='questionBank.Question')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.Topic')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionSubtopicRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='questionBank.Question')),
                ('sub_topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.SubTopic')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionSubjectRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='questionBank.Question')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionExplanation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active')], default='draft', max_length=20)),
                ('publish', models.DateTimeField(blank=True, null=True)),
                ('explanation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='commentExplanation.Explanation')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionBank.Question')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam.Exam')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionBank.Question')),
            ],
            options={
                'unique_together': {('question', 'exam')},
            },
        ),
        migrations.CreateModel(
            name='QuestionConcept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='concept.Concept')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionBank.Question')),
            ],
            options={
                'unique_together': {('question', 'concept')},
            },
        ),
    ]
