# Generated by Django 2.2 on 2020-06-29 05:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('date', '0002_auto_20200320_2307'),
        ('nxtgenUser', '0001_initial'),
        ('commentExplanation', '0001_initial'),
        ('questionBank', '0001_initial'),
        ('form', '0002_subtopicexplanationimproverequest_subtopicqueryimproverequest_topicexplanationimproverequest_topicqu'),
    ]

    operations = [
        migrations.CreateModel(
            name='VoteExplanation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField(auto_now=True)),
                ('value', models.BooleanField()),
                ('explanation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commentExplanation.Explanation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtgenUser.NxtgenUser')),
            ],
            options={
                'unique_together': {('user', 'explanation')},
            },
        ),
        migrations.CreateModel(
            name='RelevantTopicFormQuery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField(auto_now=True)),
                ('relevance', models.CharField(choices=[('irrelevant', 'Irrelevant'), ('relevant', 'Relevant'), ('highly relevant', 'Highly-Relevant')], max_length=30)),
                ('form_query', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='form.TopicFormQuery')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtgenUser.NxtgenUser')),
            ],
            options={
                'unique_together': {('user', 'form_query')},
            },
        ),
        migrations.CreateModel(
            name='RelevantSubTopicFormQuery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField(auto_now=True)),
                ('relevance', models.CharField(choices=[('irrelevant', 'Irrelevant'), ('relevant', 'Relevant'), ('highly relevant', 'Highly-Relevant')], max_length=30)),
                ('form_query', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='form.SubTopicFormQuery')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtgenUser.NxtgenUser')),
            ],
            options={
                'unique_together': {('user', 'form_query')},
            },
        ),
        migrations.CreateModel(
            name='QuestionIsCorrect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField(auto_now=True)),
                ('value', models.BooleanField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionBank.Question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtgenUser.NxtgenUser')),
            ],
            options={
                'unique_together': {('user', 'question')},
            },
        ),
        migrations.CreateModel(
            name='QuestionDifficulty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField(auto_now=True)),
                ('difficulty_option', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'hard'), ('challenge', 'Challenge')], max_length=30)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionBank.Question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtgenUser.NxtgenUser')),
            ],
            options={
                'unique_together': {('user', 'question')},
            },
        ),
        migrations.CreateModel(
            name='LikeQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField(auto_now=True)),
                ('value', models.BooleanField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionBank.Question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtgenUser.NxtgenUser')),
            ],
            options={
                'unique_together': {('user', 'question')},
            },
        ),
        migrations.CreateModel(
            name='LikePublicDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField(auto_now=True)),
                ('value', models.BooleanField()),
                ('public_date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='date.PublicDateInstitutionRelation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtgenUser.NxtgenUser')),
            ],
            options={
                'unique_together': {('user', 'public_date')},
            },
        ),
        migrations.CreateModel(
            name='LikeFormPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField(auto_now=True)),
                ('value', models.BooleanField()),
                ('form_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='form.FormPost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtgenUser.NxtgenUser')),
            ],
            options={
                'unique_together': {('user', 'form_post')},
            },
        ),
    ]
